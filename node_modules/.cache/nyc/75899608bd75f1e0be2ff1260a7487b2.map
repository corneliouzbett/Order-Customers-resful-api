{"version":3,"sources":["transaction.controller.js"],"names":["transactionService","require","models","transactionRepository","exports","createTransaction","req","res","Transaction","create","id","body","item_id","order_id","quantity_ordered","then","send","transaction","catch","err","findAllTransaction","getAllTransaction","findTransactionById","findById","params","item","updateTransaction","update","where","status","deleteTransaction","destroy","module","getFrequentCustomer","customer"],"mappings":";;AAAA,IAAMA,qBAAqBC,QAAQ,gCAAR,CAA3B;AACA,IAAMC,SAASD,QAAQ,WAAR,CAAf;AACA,IAAME,wBAAwBF,QAAQ,sCAAR,CAA9B;;AAEAG,QAAQC,iBAAR,GAA4B,UAACC,GAAD,EAAMC,GAAN,EAAc;AACtCL,WAAOM,WAAP,CAAmBC,MAAnB,CAA0B;AACtBC,YAAIJ,IAAIK,IAAJ,CAASD,EADS,EACLE,SAASN,IAAIK,IAAJ,CAASC,OADb;AAEtBC,kBAAUP,IAAIK,IAAJ,CAASE,QAFG,EAEOC,kBAAkBR,IAAIK,IAAJ,CAASG;AAFlC,KAA1B,EAIKC,IAJL,CAIU,uBAAe;AACjBR,YAAIS,IAAJ,CAASC,WAAT;AACH,KANL,EAMOC,KANP,CAMa,UAACC,GAAD,EAAS;AACdZ,YAAIS,IAAJ,CAASG,GAAT;AACH,KARL;AASH,CAVD;;AAYAf,QAAQgB,kBAAR,GAA6B,UAACd,GAAD,EAAMC,GAAN,EAAc;AACvCP,uBAAmBqB,iBAAnB,GACKN,IADL,CACU,uBAAe;AACjBR,YAAIS,IAAJ,CAASC,WAAT;AACH,KAHL,EAGOC,KAHP,CAGa,UAACC,GAAD,EAAS;AACdZ,YAAIS,IAAJ,CAASG,GAAT;AACH,KALL;AAMH,CAPD;;AASAf,QAAQkB,mBAAR,GAA8B,UAAChB,GAAD,EAAMC,GAAN,EAAc;AACxCL,WAAOM,WAAP,CAAmBe,QAAnB,CAA4BjB,IAAIkB,MAAJ,CAAWd,EAAvC,EACKK,IADL,CACU,gBAAQ;AACVR,YAAIS,IAAJ,CAASS,IAAT;AACH,KAHL,EAGOP,KAHP,CAGa,UAACC,GAAD,EAAS;AACdZ,YAAIS,IAAJ,CAASG,GAAT;AACH,KALL;AAMH,CAPD;;AASAf,QAAQsB,iBAAR,GAA4B,UAACpB,GAAD,EAAMC,GAAN,EAAc;AACtC,QAAMG,KAAKJ,IAAIkB,MAAJ,CAAWd,EAAtB;AACAR,WAAOM,WAAP,CAAmBmB,MAAnB,CAA0B,EAAEb,kBAAkBR,IAAIK,IAAJ,CAASG,gBAA7B,EAA+CF,SAASN,IAAIK,IAAJ,CAASC,OAAjE,EAA0EC,UAAUP,IAAIK,IAAJ,CAASE,QAA7F,EAA1B,EACI,EAAEe,OAAO,EAAElB,IAAIA,EAAN,EAAT,EADJ,EAEKK,IAFL,CAEU,YAAM;AACRR,YAAIsB,MAAJ,CAAW,GAAX,EAAgBb,IAAhB,CAAqB,gDAAgDN,EAArE;AACH,KAJL,EAKKQ,KALL,CAKW,UAACC,GAAD,EAAS;AACZZ,YAAIS,IAAJ,CAASG,GAAT;AACH,KAPL;AAQH,CAVD;;AAYAf,QAAQ0B,iBAAR,GAA4B,UAACxB,GAAD,EAAMC,GAAN,EAAc;AACtC,QAAMG,KAAKJ,IAAIkB,MAAJ,CAAWd,EAAtB;AACAR,WAAOM,WAAP,CAAmBuB,OAAnB,CAA2B,EAAEH,OAAO,EAAElB,IAAIA,EAAN,EAAT,EAA3B,EAAkDK,IAAlD,CAAuD,YAAM;AACzDR,YAAIsB,MAAJ,CAAW,GAAX,EAAgBb,IAAhB,CAAqB,kDAAkDN,EAAvE;AACH,KAFD;AAGH,CALD;;AAOAsB,OAAO5B,OAAP,CAAe6B,mBAAf,GAAqC,UAAC3B,GAAD,EAAMC,GAAN,EAAc;AAC/CJ,0BAAsB8B,mBAAtB,GACKlB,IADL,CACU,UAACmB,QAAD,EAAc;AAAE3B,YAAIS,IAAJ,CAASkB,QAAT;AAAoB,KAD9C,EAEKhB,KAFL,CAEW,UAACC,GAAD;AAAA,eAASZ,IAAIS,IAAJ,CAAS,gBAAT,CAAT;AAAA,KAFX;AAGH,CAJD","file":"transaction.controller.js","sourceRoot":"/home/corneliouzbett/Node-projects/Orders-customers-restful-api/controllers","sourcesContent":["const transactionService = require('../service/transaction.service');\nconst models = require('../models');\nconst transactionRepository = require('../repository/TransactionsRepository');\n\nexports.createTransaction = (req, res) => {\n    models.Transaction.create({\n        id: req.body.id, item_id: req.body.item_id,\n        order_id: req.body.order_id, quantity_ordered: req.body.quantity_ordered\n    })\n        .then(transaction => {\n            res.send(transaction);\n        }).catch((err) => {\n            res.send(err)\n        })\n};\n\nexports.findAllTransaction = (req, res) => {\n    transactionService.getAllTransaction()\n        .then(transaction => {\n            res.send(transaction);\n        }).catch((err) => {\n            res.send(err);\n        })\n};\n\nexports.findTransactionById = (req, res) => {\n    models.Transaction.findById(req.params.id)\n        .then(item => {\n            res.send(item);\n        }).catch((err) => {\n            res.send(err);\n        })\n};\n\nexports.updateTransaction = (req, res) => {\n    const id = req.params.id;\n    models.Transaction.update({ quantity_ordered: req.body.quantity_ordered, item_id: req.body.item_id, order_id: req.body.order_id },\n        { where: { id: id } })\n        .then(() => {\n            res.status(200).send(\"updated successfully transaction with id = \" + id);\n        })\n        .catch((err) => {\n            res.send(err)\n        })\n};\n\nexports.deleteTransaction = (req, res) => {\n    const id = req.params.id;\n    models.Transaction.destroy({ where: { id: id } }).then(() => {\n        res.status(200).send('deleted successfully a transaction with id = ' + id);\n    });\n};\n\nmodule.exports.getFrequentCustomer = (req, res) => {\n    transactionRepository.getFrequentCustomer()\n        .then((customer) => { res.send(customer) })\n        .catch((err) => res.send(\"error occurred\"));\n};\n"]}