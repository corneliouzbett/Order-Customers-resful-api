{"version":3,"sources":["item.controller.js"],"names":["itemService","require","models","exports","createItem","req","res","Item","create","id","body","item_name","unit_cost","then","send","item","catch","err","getAllItems","getItemById","findById","params","updateItem","update","where","status","error","deleteItem","destroy"],"mappings":";;AAAA,IAAMA,cAAcC,QAAQ,yBAAR,CAApB;AACA,IAAMC,SAASD,QAAQ,WAAR,CAAf;;AAEAE,QAAQC,UAAR,GAAqB,UAACC,GAAD,EAAMC,GAAN,EAAc;AAC/BJ,WAAOK,IAAP,CAAYC,MAAZ,CAAmB,EAACC,IAAIJ,IAAIK,IAAJ,CAASD,EAAd,EAAkBE,WAAWN,IAAIK,IAAJ,CAASC,SAAtC,EAAiDC,WAAWP,IAAIK,IAAJ,CAASE,SAArE,EAAnB,EACKC,IADL,CACU,gBAAQ;AACVP,YAAIQ,IAAJ,CAASC,IAAT;AACH,KAHL,EAGOC,KAHP,CAGa;AAAA,eAAOV,IAAIQ,IAAJ,CAASG,GAAT,CAAP;AAAA,KAHb;AAIH,CALD;;AAOAd,QAAQe,WAAR,GAAsB,UAACb,GAAD,EAAMC,GAAN,EAAc;AAChCN,gBAAYkB,WAAZ,GAA0BL,IAA1B,CAA+B,gBAAQ;AACnCP,YAAIQ,IAAJ,CAASC,IAAT;AACH,KAFD;AAGH,CAJD;;AAMAZ,QAAQgB,WAAR,GAAsB,UAACd,GAAD,EAAMC,GAAN,EAAc;AAChCJ,WAAOK,IAAP,CAAYa,QAAZ,CAAqBf,IAAIgB,MAAJ,CAAWZ,EAAhC,EACKI,IADL,CACU,gBAAQ;AACVP,YAAIQ,IAAJ,CAASC,IAAT;AACH,KAHL,EAIKC,KAJL,CAIW,UAACC,GAAD,EAAS;AACZX,YAAIQ,IAAJ,CAASG,GAAT;AACH,KANL;AAOH,CARD;;AAUAd,QAAQmB,UAAR,GAAqB,UAACjB,GAAD,EAAMC,GAAN,EAAc;AAC/B,QAAMG,KAAKJ,IAAIgB,MAAJ,CAAWZ,EAAtB;AACAP,WAAOK,IAAP,CAAYgB,MAAZ,CAAmB;AACfZ,mBAAWN,IAAIK,IAAJ,CAASC,SADL,EACgBC,WAAWP,IAAIK,IAAJ,CAASE;AADpC,KAAnB,EAEG,EAACY,OAAO,EAACf,IAAIA,EAAL,EAAR,EAFH,EAGKI,IAHL,CAGU,YAAM;AACRP,YAAImB,MAAJ,CAAW,GAAX,EAAgBX,IAAhB,CAAqB,2CAA2CL,EAAhE;AACH,KALL,EAMKO,KANL,CAMW,UAACU,KAAD;AAAA,eAAWpB,IAAIQ,IAAJ,CAASY,KAAT,CAAX;AAAA,KANX;AAOH,CATD;;AAWAvB,QAAQwB,UAAR,GAAqB,UAACtB,GAAD,EAAMC,GAAN,EAAc;AAC/B,QAAMG,KAAKJ,IAAIgB,MAAJ,CAAWZ,EAAtB;AACAP,WAAOK,IAAP,CAAYqB,OAAZ,CAAoB,EAACJ,OAAO,EAACf,IAAIA,EAAL,EAAR,EAApB,EAAuCI,IAAvC,CAA4C,YAAM;AAC9CP,YAAImB,MAAJ,CAAW,GAAX,EAAgBX,IAAhB,CAAqB,yCAAyCL,EAA9D;AACH,KAFD;AAGH,CALD","file":"item.controller.js","sourceRoot":"/home/corneliouzbett/Node-projects/Orders-customers-restful-api/controllers","sourcesContent":["const itemService = require('../service/item.service');\nconst models = require('../models');\n\nexports.createItem = (req, res) => {\n    models.Item.create({id: req.body.id, item_name: req.body.item_name, unit_cost: req.body.unit_cost})\n        .then(item => {\n            res.send(item);\n        }).catch(err => res.send(err));\n};\n\nexports.getAllItems = (req, res) => {\n    itemService.getAllItems().then(item => {\n        res.send(item);\n    });\n};\n\nexports.getItemById = (req, res) => {\n    models.Item.findById(req.params.id)\n        .then(item => {\n            res.send(item)\n        })\n        .catch((err) => {\n            res.send(err);\n        })\n};\n\nexports.updateItem = (req, res) => {\n    const id = req.params.id;\n    models.Item.update({\n        item_name: req.body.item_name, unit_cost: req.body.unit_cost\n    }, {where: {id: id}})\n        .then(() => {\n            res.status(200).send(\"updated successfully a item with id = \" + id)\n        })\n        .catch((error) => res.send(error))\n};\n\nexports.deleteItem = (req, res) => {\n    const id = req.params.id;\n    models.Item.destroy({where: {id: id}}).then(() => {\n        res.status(200).send('deleted successfully item with id = ' + id);\n    });\n};\n"]}