{"version":3,"sources":["index.js"],"names":["fs","require","path","Sequelize","basename","__filename","env","process","NODE_ENV","config","__dirname","db","sequelize","use_env_variable","database","username","password","readdirSync","filter","file","indexOf","slice","forEach","model","join","name","Object","keys","modelName","associate","module","exports","getSequelizeInstance"],"mappings":"AAAA;;AAEA,IAAMA,KAAKC,QAAQ,IAAR,CAAX;AACA,IAAMC,OAAOD,QAAQ,MAAR,CAAb;AACA,IAAME,YAAYF,QAAQ,WAAR,CAAlB;AACA,IAAMG,WAAWF,KAAKE,QAAL,CAAcC,UAAd,CAAjB;AACA,IAAMC,MAAMC,QAAQD,GAAR,CAAYE,QAAZ,IAAwB,aAApC;AACA,IAAMC,SAASR,QAAQS,YAAY,wBAApB,EAA8CJ,GAA9C,CAAf;AACA,IAAMK,KAAK,EAAX;;AAEA,IAAIC,kBAAJ;AACA,IAAIH,OAAOI,gBAAX,EAA6B;AACzBD,gBAAY,IAAIT,SAAJ,CAAcI,QAAQD,GAAR,CAAYG,OAAOI,gBAAnB,CAAd,EAAoDJ,MAApD,CAAZ;AACH,CAFD,MAEO;AACHG,gBAAY,IAAIT,SAAJ,CAAcM,OAAOK,QAArB,EAA+BL,OAAOM,QAAtC,EAAgDN,OAAOO,QAAvD,EAAiEP,MAAjE,CAAZ;AACH;;AAEDT,GACKiB,WADL,CACiBP,SADjB,EAEKQ,MAFL,CAEY,gBAAQ;AACZ,WAAQC,KAAKC,OAAL,CAAa,GAAb,MAAsB,CAAvB,IAA8BD,SAASf,QAAvC,IAAqDe,KAAKE,KAAL,CAAW,CAAC,CAAZ,MAAmB,KAA/E;AACH,CAJL,EAKKC,OALL,CAKa,gBAAQ;AACb,QAAMC,QAAQX,UAAU,QAAV,EAAoBV,KAAKsB,IAAL,CAAUd,SAAV,EAAqBS,IAArB,CAApB,CAAd;AACAR,OAAGY,MAAME,IAAT,IAAiBF,KAAjB;AACH,CARL;;AAUAG,OAAOC,IAAP,CAAYhB,EAAZ,EAAgBW,OAAhB,CAAwB,qBAAa;AACjC,QAAIX,GAAGiB,SAAH,EAAcC,SAAlB,EAA6B;AACzBlB,WAAGiB,SAAH,EAAcC,SAAd,CAAwBlB,EAAxB;AACH;AACJ,CAJD;;AAMAA,GAAGC,SAAH,GAAeA,SAAf;AACAD,GAAGR,SAAH,GAAeA,SAAf;;AAEA2B,OAAOC,OAAP,GAAiBpB,EAAjB;;AAEAmB,OAAOC,OAAP,CAAeC,oBAAf,GAAsCpB,SAAtC","file":"index.js","sourceRoot":"/home/corneliouzbett/Node-projects/Orders-customers-restful-api/models","sourcesContent":["'use strict';\n\nconst fs = require('fs');\nconst path = require('path');\nconst Sequelize = require('sequelize');\nconst basename = path.basename(__filename);\nconst env = process.env.NODE_ENV || 'development';\nconst config = require(__dirname + '/../config/config.json')[env];\nconst db = {};\n\nlet sequelize;\nif (config.use_env_variable) {\n    sequelize = new Sequelize(process.env[config.use_env_variable], config);\n} else {\n    sequelize = new Sequelize(config.database, config.username, config.password, config);\n}\n\nfs\n    .readdirSync(__dirname)\n    .filter(file => {\n        return (file.indexOf('.') !== 0) && (file !== basename) && (file.slice(-3) === '.js');\n    })\n    .forEach(file => {\n        const model = sequelize['import'](path.join(__dirname, file));\n        db[model.name] = model;\n    });\n\nObject.keys(db).forEach(modelName => {\n    if (db[modelName].associate) {\n        db[modelName].associate(db);\n    }\n});\n\ndb.sequelize = sequelize;\ndb.Sequelize = Sequelize;\n\nmodule.exports = db;\n\nmodule.exports.getSequelizeInstance = sequelize;\n"]}