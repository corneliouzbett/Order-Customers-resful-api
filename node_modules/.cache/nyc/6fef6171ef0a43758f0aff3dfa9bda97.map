{"version":3,"sources":["customer.controller.js"],"names":["customerService","require","customerModel","OrderItemRepo","exports","getAllCustomers","req","res","then","status","send","customer","catch","err","getAllRecords","orderitems","orderItem","forEach","item","order","customer_name","order_date","console","log","JSON","stringify","getCustomerById","params","customer_id","create","Customer","id","body","phone_number","update","where","destroy"],"mappings":"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","file":"customer.controller.js","sourceRoot":"/home/corneliouzbett/Node-projects/Orders-customers-restful-api/controllers","sourcesContent":["const customerService = require('../service/customer.service');\r\nconst customerModel = require('../models');\r\nconst OrderItemRepo = require('../repository/OrderItemRepository');\r\n\r\nexports.getAllCustomers = (req, res) => {\r\n    return customerService.getAllCustomers()\r\n        .then(customer => {\r\n            res.status(200).send(customer)\r\n        })\r\n        .catch((err) => res.send(err));\r\n};\r\n\r\nexports.getAllRecords = (req, res) => {\r\n    return OrderItemRepo.getAllRecords()\r\n        .then(orderItem => {\r\n            let orderitems = {};\r\n            orderItem.forEach(function (item) {\r\n                let order = orderitems[item.customer_name] = orderitems[item.customer_name]  || {};\r\n                order[item.order_date] =order[item.order_date];\r\n            });\r\n\r\n            console.log(JSON.stringify(orderitems, null, 4));\r\n            res.status(200).send(orderItem)\r\n        })\r\n        .catch((err) => res.send(err));\r\n};\r\n\r\nexports.getCustomerById = (req, res) => {\r\n    console.log(\"customerID: \", req.params.customer_id);\r\n    customerService.getCustomerById(req.params.customer_id)\r\n        .then(customer => {\r\n            res.send(customer)\r\n        })\r\n        .catch(err => res.send(err));\r\n};\r\n\r\nexports.create = (req, res) => {\r\n    customerModel.Customer.create({\r\n        id: req.body.id,\r\n        customer_name: req.body.customer_name,\r\n        phone_number: req.body.phone_number\r\n    })\r\n        .then(customer => {\r\n            res.status(200).send(\"customer created successfully\")\r\n        })\r\n        .catch((err) => res.send(err));\r\n};\r\n\r\nexports.update = (req, res) => {\r\n    customerModel.Customer.update({\r\n        customer_id: req.body.id, customer_name: req.body.customer_name,\r\n        phone_number: req.body.phone_number\r\n    }, { where: { id: req.params.customer_id } })\r\n        .then((customer) => {\r\n            res.status(200).send(\"updated successfully a customer with id = \" + req.params.customer_id)\r\n        })\r\n        .catch(err => res.send(err));\r\n};\r\n\r\nexports.destroy = (req, res) => {\r\n    customerModel.Customer.destroy({ where: { customer_id: req.params.customer_id } })\r\n        .then(() => {\r\n            res.status(200).send('deleted successfully a customer with id = ' + req.params.customer_id)\r\n        })\r\n        .catch((err) => res.send(err));\r\n};"]}