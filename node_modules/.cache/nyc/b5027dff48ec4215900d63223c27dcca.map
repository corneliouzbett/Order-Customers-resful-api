{"version":3,"sources":["order.controller.js"],"names":["orderService","require","orderItemRepository","models","chalk","log","console","exports","createOrder","req","res","Order","create","id","body","order_date","customer_id","then","status","send","order","blue","getAllOrders","request","response","orders","bold","getOrderById","findById","params","updateOrder","update","where","deleteOrder","destroy","getOrderItemDetails","getCustomerOrderDetails","orderItem","catch","err"],"mappings":";;AAAA,IAAMA,eAAeC,QAAQ,0BAAR,CAArB;AACA,IAAMC,sBAAsBD,QAAQ,mCAAR,CAA5B;AACA,IAAME,SAASF,QAAQ,WAAR,CAAf;AACA,IAAMG,QAAQH,QAAQ,OAAR,CAAd;AACA,IAAMI,MAAMC,QAAQD,GAApB;;AAEAE,QAAQC,WAAR,GAAsB,UAACC,GAAD,EAAMC,GAAN,EAAc;AAChCP,WAAOQ,KAAP,CAAaC,MAAb,CAAoB,EAAEC,IAAIJ,IAAIK,IAAJ,CAASD,EAAf,EAAmBE,YAAYN,IAAIK,IAAJ,CAASC,UAAxC,EAAoDC,aAAaP,IAAIK,IAAJ,CAASE,WAA1E,EAApB,EACKC,IADL,CACU,iBAAS;AACXP,YAAIQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBC,KAArB;AACAf,YAAID,MAAMiB,IAAN,CAAW,wCAAsCZ,IAAIK,IAAJ,CAASD,EAA1D,CAAJ;AACH,KAJL;AAKH,CAND;;AAQAN,QAAQe,YAAR,GAAuB,UAACC,OAAD,EAAUC,QAAV,EAAsB;AACzCxB,iBAAasB,YAAb,GACKL,IADL,CACW,kBAAU;AACjBO,iBAASL,IAAT,CAAcM,MAAd;AACApB,YAAID,MAAMiB,IAAN,CAAWK,IAAX,CAAgB,0BAAhB,CAAJ;AACH,KAJD;AAKH,CAND;;AAQAnB,QAAQoB,YAAR,GAAuB,UAAClB,GAAD,EAAMC,GAAN,EAAc;AACjCP,WAAOQ,KAAP,CAAaiB,QAAb,CAAsBnB,IAAIoB,MAAJ,CAAWhB,EAAjC,EACKI,IADL,CACU,iBAAS;AACfP,YAAIS,IAAJ,CAASC,KAAT;AACAf,YAAID,MAAMiB,IAAN,CAAW,yCAAuCZ,IAAIK,IAAJ,CAASD,EAA3D,CAAJ;AACH,KAJD;AAKH,CAND;;AAQAN,QAAQuB,WAAR,GAAsB,UAACrB,GAAD,EAAMC,GAAN,EAAc;AAChCP,WAAOQ,KAAP,CAAaoB,MAAb,CAAqB,EAAChB,YAAYN,IAAIK,IAAJ,CAASC,UAAtB,EAAkCC,aAAaP,IAAIK,IAAJ,CAASE,WAAxD,EAArB,EAA4F,EAACgB,OAAO,EAACnB,IAAIJ,IAAIoB,MAAJ,CAAWhB,EAAhB,EAAR,EAA5F,EACKI,IADL,CACU,UAACG,KAAD,EAAW;AACbV,YAAIQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,iCAArB;AACAd,YAAID,MAAMiB,IAAN,CAAW,qDAAmDZ,IAAIoB,MAAJ,CAAWhB,EAAzE,CAAJ;AACH,KAJL;AAKH,CAND;;AAQAN,QAAQ0B,WAAR,GAAsB,UAACxB,GAAD,EAAMC,GAAN,EAAc;AAChCP,WAAOQ,KAAP,CAAauB,OAAb,CAAqB,EAAEF,OAAO,EAACnB,IAAIJ,IAAIoB,MAAJ,CAAWhB,EAAhB,EAAT,EAArB,EACKI,IADL,CACU,YAAM;AACZP,YAAIQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,+BAArB;AACAd,YAAID,MAAMiB,IAAN,CAAW,uDAAqDZ,IAAIoB,MAAJ,CAAWhB,EAA3E,CAAJ;AACH,KAJD;AAKH,CAND;;AAQAN,QAAQ4B,mBAAR,GAA8B,UAAC1B,GAAD,EAAMC,GAAN,EAAa;AACvCR,wBAAoBkC,uBAApB,GACKnB,IADL,CACW,UAACoB,SAAD,EAAe;AACtB3B,YAAIQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBkB,SAArB;AACH,KAHD,EAGGC,KAHH,CAGS,UAACC,GAAD;AAAA,eAAS7B,IAAIS,IAAJ,CAASoB,GAAT,CAAT;AAAA,KAHT;AAKH,CAND","file":"order.controller.js","sourceRoot":"/home/corneliouzbett/Node-projects/Orders-customers-restful-api/controllers","sourcesContent":["const orderService = require('../service/order.service');\nconst orderItemRepository = require('../repository/OrderItemRepository');\nconst models = require('../models');\nconst chalk = require('chalk');\nconst log = console.log;\n\nexports.createOrder = (req, res) => {\n    models.Order.create({ id: req.body.id, order_date: req.body.order_date, customer_id: req.body.customer_id})\n        .then(order => {\n            res.status(201).send(order);\n            log(chalk.blue(\"success:  created order with ID :: \"+req.body.id));\n        });\n};\n\nexports.getAllOrders = (request, response) =>{\n    orderService.getAllOrders()\n        .then( orders => {\n        response.send(orders);\n        log(chalk.blue.bold(\"success : Get all orders\"));\n    })\n};\n\nexports.getOrderById = (req, res) => {\n    models.Order.findById(req.params.id)\n        .then(order => {\n        res.send(order);\n        log(chalk.blue(\"success:  Retrieve order with ID :: \"+req.body.id));\n    })\n};\n\nexports.updateOrder = (req, res) => {\n    models.Order.update( {order_date: req.body.order_date, customer_id: req.body.customer_id }, {where: {id: req.params.id}})\n        .then((order) => {\n            res.status(200).send(\"success :  updated successfully\");\n            log(chalk.blue(\"success:  updated successfully order with ID :: \"+req.params.id));\n        });\n};\n\nexports.deleteOrder = (req, res) => {\n    models.Order.destroy({ where: {id: req.params.id}})\n        .then(() => {\n        res.status(200).send(\"success: deleted successfully\");\n        log(chalk.blue(\"success:  deleted successfully a order with ID :: \"+req.params.id));\n    });\n};\n\nexports.getOrderItemDetails = (req, res) =>{\n    orderItemRepository.getCustomerOrderDetails()\n        .then( (orderItem) => {\n        res.status(200).send(orderItem);\n    }).catch((err) => res.send(err));\n\n};\n"]}