{"version":3,"sources":["server.js"],"names":["express","require","bodyParser","models","config","debug","app","use","json","urlencoded","extended","text","type","onError","error","syscall","porty","address","bind","code","process","exit","onListening","addr","port","sequelize","sync","then","listen","console","log","on","catch","err","module","exports"],"mappings":";;AAAA,IAAMA,UAAUC,QAAQ,SAAR,CAAhB;AACA,IAAMC,aAAaD,QAAQ,aAAR,CAAnB;AACA,IAAME,SAASF,QAAQ,UAAR,CAAf;AACA,IAAMG,SAASH,QAAQ,kBAAR,CAAf;AACA,IAAMI,QAAQJ,QAAQ,OAAR,CAAd;AACA,IAAMK,MAAMN,SAAZ;;AAEAM,IAAIC,GAAJ,CAAQL,WAAWM,IAAX,EAAR;AACAF,IAAIC,GAAJ,CAAQL,WAAWO,UAAX,CAAsB,EAACC,UAAU,IAAX,EAAtB,CAAR;AACAJ,IAAIC,GAAJ,CAAQL,WAAWS,IAAX,EAAR;AACAL,IAAIC,GAAJ,CAAQL,WAAWM,IAAX,CAAgB,EAAEI,MAAM,kBAAR,EAAhB,CAAR;;AAEAX,QAAQ,oBAAR,EAA8BK,GAA9B;;AAEA,IAAMO,UAAU,SAAVA,OAAU,CAACC,KAAD,EAAW;AACvB,QAAIA,MAAMC,OAAN,KAAkB,QAAtB,EAAgC,MAAMD,KAAN;;AAEhC,QAAME,QAAQV,IAAIW,OAAlB;;AAEA,QAAMC,OACF,OAAOF,KAAP,KAAiB,QAAjB,aACcA,KADd,eAEgBA,KAHpB;;AAKA,YAAQF,MAAMK,IAAd;AACI,aAAK,QAAL;AACId,kBAASa,IAAT;AACAE,oBAAQC,IAAR,CAAa,CAAb;AACA;AACJ,aAAK,YAAL;AACIhB,kBAASa,IAAT;AACAE,oBAAQC,IAAR,CAAa,CAAb;AACA;AACJ;AACI,kBAAMP,KAAN;AAVR;AAYH,CAtBD;;AAwBA,IAAMQ,cAAc,SAAdA,WAAc,GAAM;AACtB,QAAMC,OAAOjB,IAAIW,OAAJ,EAAb;AACA,QAAMC,OACF,OAAOK,IAAP,KAAgB,QAAhB,aACcA,IADd,aAEcA,KAAKC,IAHvB;;AAKAnB,4BAAsBa,IAAtB;AACH,CARD;;AAUAf,OAAOsB,SAAP,CAAiBC,IAAjB,GACKC,IADL,CACU,YAAM;AACRrB,QAAIsB,MAAJ,CAAWxB,OAAOoB,IAAlB,EAAwB,YAAM;AAC1BnB,cAAM,kCAAN,EAA0CD,OAAOoB,IAAjD;AACAK,gBAAQC,GAAR,CAAY,0CAAZ,EAAwD1B,OAAOoB,IAA/D;AACH,KAHD;AAIAlB,QAAIyB,EAAJ,CAAO,OAAP,EAAgBlB,OAAhB;AACAP,QAAIyB,EAAJ,CAAO,WAAP,EAAoBT,WAApB;AACH,CARL,EASKU,KATL,CASW,UAACC,GAAD,EAAS;AAAE,UAAMA,GAAN;AAAY,CATlC;;AAWA3B,IAAIH,MAAJ,GAAaA,MAAb;AACA+B,OAAOC,OAAP,GAAiB7B,GAAjB","file":"server.js","sourceRoot":"/home/corneliouzbett/Node-projects/Orders-customers-restful-api","sourcesContent":["const express = require('express');\r\nconst bodyParser = require('body-parser');\r\nconst models = require('./models');\r\nconst config = require('./config/default');\r\nconst debug = require('debug');\r\nconst app = express();\r\n\r\napp.use(bodyParser.json());\r\napp.use(bodyParser.urlencoded({extended: true}));\r\napp.use(bodyParser.text());\r\napp.use(bodyParser.json({ type: 'application/json'}));\r\n\r\nrequire('./routes/routes.js')(app);\r\n\r\nconst onError = (error) => {\r\n    if (error.syscall !== 'listen') throw error;\r\n\r\n    const porty = app.address;\r\n\r\n    const bind =\r\n        typeof porty === 'string'\r\n            ? `Pipe ${porty}`\r\n            : `Port + ${porty}`;\r\n\r\n    switch (error.code) {\r\n        case 'EACCES':\r\n            debug(`${bind} requires elevated privileges`);\r\n            process.exit(1);\r\n            break;\r\n        case 'EADDRINUSE':\r\n            debug(`${bind} is already in use`);\r\n            process.exit(1);\r\n            break;\r\n        default:\r\n            throw error;\r\n    }\r\n};\r\n\r\nconst onListening = () => {\r\n    const addr = app.address();\r\n    const bind =\r\n        typeof addr === 'string'\r\n            ? `Pipe ${addr}`\r\n            : `Port ${addr.port}`;\r\n\r\n    debug(`Listening on ${bind}`);\r\n};\r\n\r\nmodels.sequelize.sync()\r\n    .then(() => {\r\n        app.listen(config.port, () => {\r\n            debug('Express server listening on port', config.port);\r\n            console.log('Customer-Orders server listening on port', config.port);\r\n        });\r\n        app.on('error', onError);\r\n        app.on('listening', onListening);\r\n    })\r\n    .catch((err) => { throw err; });\r\n\r\napp.models = models;\r\nmodule.exports = app;"]}